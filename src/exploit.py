import asyncio
import websockets
import json
import sys

class SimpleWebSocketClient:
    def __init__(self, uri):
        self.uri = uri
        self.websocket = None
    
    async def connect(self):
        """Connect to the WebSocket server"""
        try:
            self.websocket = await websockets.connect(self.uri)
            print(f"Connected to {self.uri}")
            return True
        except Exception as e:
            print(f"Failed to connect: {e}")
            return False
    
    async def send_json(self, json_data):
        """Send JSON data and wait for response"""
        if not self.websocket:
            print("Not connected to WebSocket")
            return None
        
        try:
            # Send the JSON message
            json_message = json.dumps(json_data)
            await self.websocket.send(json_message)
            print(f"Sent: {json_message}")
            
            # Wait for response
            response = await self.websocket.recv()
            print(f"Received: {response}")
            
            # Try to parse as JSON
            try:
                return json.loads(response)
            except json.JSONDecodeError:
                return response
                
        except Exception as e:
            print(f"Error: {e}")
            return None
    
    async def close(self):
        """Close the WebSocket connection"""
        if self.websocket:
            await self.websocket.close()
            print("Connection closed")

async def main():
    prompt_injection_instructions =  ""
    client = SimpleWebSocketClient(f"wss://research.turtlep.us/ws/client_tc0fnn5u7%0a{prompt_injection_instructions.replace(' ', '%20')}")
    if await client.connect():
        response = await client.send_json({"type": "message", "message": "chat message"})
        print(response)
        await client.close()

if __name__ == "__main__":
    asyncio.run(main())